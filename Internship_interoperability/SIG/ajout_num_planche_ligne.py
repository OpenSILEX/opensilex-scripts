# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# ajout_num_planche_ligne.py
# Created on: 2022-08-19 08:22:33.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: ajout_num_planche_ligne <Couche_des_polygones> <Vecteur_directeur__parallèle_aux_lignes_et_collé_à_la_ligne_n°1_> <Nombre_de_planches___Nombre_de_cellules_selon_l_axe_donné_par_le_vecteur_directeur> <Choisir_le_sens_de_la_numérotation_des_planches_selon_la_méthode_de_tri_du_champ_CENTROID_X__CENTROID_Y_seulement_si_X_ne_permet_pas_de_différencier_> <Emplacement_du_fichier_en_sortie____shp_> 
# Description: 
# ---------------------------------------------------------------------------

# Set the necessary product code
# import arcinfo


# Import arcpy module
import arcpy

# Load required toolboxes
arcpy.ImportToolbox("Modéliser les fonctions")

# Script arguments
Couche_des_polygones = arcpy.GetParameterAsText(0)

Vecteur_directeur__parallèle_aux_lignes_et_collé_à_la_ligne_n°1_ = arcpy.GetParameterAsText(1)

Nombre_de_planches___Nombre_de_cellules_selon_l_axe_donné_par_le_vecteur_directeur = arcpy.GetParameterAsText(2)

Choisir_le_sens_de_la_numérotation_des_planches_selon_la_méthode_de_tri_du_champ_CENTROID_X__CENTROID_Y_seulement_si_X_ne_permet_pas_de_différencier_ = arcpy.GetParameterAsText(3)
if Choisir_le_sens_de_la_numérotation_des_planches_selon_la_méthode_de_tri_du_champ_CENTROID_X__CENTROID_Y_seulement_si_X_ne_permet_pas_de_différencier_ == '#' or not Choisir_le_sens_de_la_numérotation_des_planches_selon_la_méthode_de_tri_du_champ_CENTROID_X__CENTROID_Y_seulement_si_X_ne_permet_pas_de_différencier_:
    Choisir_le_sens_de_la_numérotation_des_planches_selon_la_méthode_de_tri_du_champ_CENTROID_X__CENTROID_Y_seulement_si_X_ne_permet_pas_de_différencier_ = "ligne ASCENDING;CENTROID_X ASCENDING;CENTROID_Y ASCENDING" # provide a default value if unspecified

Emplacement_du_fichier_en_sortie____shp_ = arcpy.GetParameterAsText(4)

# Local variables:
v_avec_l_int_vide_ = "%avec_l_int_vide%"
calc_dist = v_avec_l_int_vide_
interm = "in_memory\\interm"
avec_l_int_vide = interm
tri_dist = "%chemin%\\interm_%fich%"
avec_l_int = tri_dist
avec_l_vide = avec_l_int
interm__fich_ = avec_l_vide
avec_centro = interm__fich_
avec_centro2 = "%tri_dist%"
Classe_d’entités_en_sortie = Emplacement_du_fichier_en_sortie____shp_
avec_planche = Classe_d’entités_en_sortie
Table_en_sortie = avec_planche
Classe_d’entités_en_sortie__2_ = Table_en_sortie
Classe_d’entités_en_sortie__3_ = Classe_d’entités_en_sortie__2_
chemin = "FILE"
fich = "FILE"

# Process: Copier des entités
arcpy.CopyFeatures_management(Couche_des_polygones, interm, "", "0", "0", "0")

# Process: ajout_l_int
arcpy.AddField_management(interm, "l_int", "LONG", "", "", "50", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Proche
arcpy.Near_analysis(v_avec_l_int_vide_, Vecteur_directeur__parallèle_aux_lignes_et_collé_à_la_ligne_n°1_, "", "NO_LOCATION", "NO_ANGLE", "PLANAR")

# Process: Trier
arcpy.Sort_management(calc_dist, tri_dist, "NEAR_DIST ASCENDING", "UR")

# Process: Calculer un champ
arcpy.CalculateField_management(tri_dist, "l_int", "Int ( ([FID]/%Nombre de planches = Nombre de cellules selon l'axe donné par le vecteur directeur%)+1 )", "VB", "")

# Process: ajout_l
arcpy.AddField_management(avec_l_int, "ligne", "LONG", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Calculer un champ (2)
arcpy.CalculateField_management(avec_l_vide, "ligne", "[l_int]", "VB", "")

# Process: Ajouter des attributs géométriques
arcpy.AddGeometryAttributes_management(interm__fich_, "CENTROID", "", "", "")

# Process: Trier (2)
arcpy.Sort_management(avec_centro2, Emplacement_du_fichier_en_sortie____shp_, Choisir_le_sens_de_la_numérotation_des_planches_selon_la_méthode_de_tri_du_champ_CENTROID_X__CENTROID_Y_seulement_si_X_ne_permet_pas_de_différencier_, "UR")

# Process: ajout_planche
arcpy.AddField_management(Emplacement_du_fichier_en_sortie____shp_, "planche", "LONG", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Calculer "planche"
arcpy.CalculateField_management(Classe_d’entités_en_sortie, "planche", "(!FID!+1)-(!l_int!-1)*(num()[1]/num()[0])", "PYTHON_9.3", "import arcpy
import numpy


def num() :
    input = arcpy.GetParameterAsText(0)
    ligne = arcpy.da.TableToNumPyArray(input, 'ligne')
    id = arcpy.da.TableToNumPyArray(input, 'FID')    
    return (ligne.astype(int).max(), id.astype(int).max()+1)")

# Process: Supprimer "centroides","dist" et "p_int"
arcpy.DeleteField_management(avec_planche, "CENTROID_X;CENTROID_Y;NEAR_FID;NEAR_DIST;l_int")

# Process: Ajouter "P_L"
arcpy.AddField_management(Table_en_sortie, "P_L", "TEXT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Calculer "P_L"
arcpy.CalculateField_management(Classe_d’entités_en_sortie__2_, "P_L", "[planche]&\"_\"&[ligne]", "VB", "")

# Process: Analyser un chemin
arcpy.ParsePath_mb(Emplacement_du_fichier_en_sortie____shp_, "PATH")

# Process: Analyser un chemin (2)
arcpy.ParsePath_mb(Emplacement_du_fichier_en_sortie____shp_, "FILE")

